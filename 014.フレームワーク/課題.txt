JSF（Java Servlet Faces）

・コスト
 オープンソースで誰でも使用可能です。ただし、JavaEEの開発環境セットを用意した場合はコストがかかります。そのため比較の表では△にしています。
 ・開発効率
JSFは、JSR127（Javaコミュニティプロセス）で仕様策定されている標準フレームワークです。そのため、ツールベンダーが開発支援ツールを開発しやすく、プログラミングもスムーズに行うことが出来ます。また、従来のリクエスト駆動型のMVC Webフレームワークとは違い、コンポーネントベースのアプローチをとっています。
 ・メンテナンス性能
 最新バージョンは、2013年5月にリリースされたJSF2.2です。ですが、JSFのためのWebテンプレートエンジンの存在があるうえ、JavaEEの仕様として採用されているため、今後もサポートが続きます。
 ・特徴
JavaEE環境で動作する、ユーザーインターフェイスフレームワークです。大きな特徴としては、MVCモデル2かつ、UIコンポーネントでWebページを構成することです。

 

 

Play Framework

・コスト
 オープンソースで誰でも使用可能です。
 
・開発効率
 環境構築が容易ですぐに開発に着手することが可能です。また、フルスタックFrameworkのため、ライブラリの相性を気にすることなく開発することが出来ます。業務システムよりはWebサービスで力を発揮します。

メンテナンス性能
RubyとPythonのフレームワークの良い所取りをしており、Ruby on Railsの特徴であるDRY原則に基づいている、コードの重複を避ける設計がされているため、非常にメンテナンスが行いやすい洗礼されたコードを記述することが可能です。
 ・特徴
Play Frameworkは、バージョン2.xはScalaで記述されているため、JavaとScalaで使用可能な点と、IDEに依存しない点が大きな特徴と言えます。

 

Deopwizard

 

・コスト
 オープンソースで誰でも使用可能です。
 
・開発効率
Dropwizardはフレームワークでもあり、ライブラリでもあります。そのため、フレームワークではなく、ロジックとして開発することが可能です。また、APサーバが不要なため、ファイルに置き換えることにより容易にWebサービスを動作させることが可能です。
 
・メンテナンス性能
まだまだ日本での使用事例がないため、比較の表では△と表記しています。英語が出来るのであれば、機能を再利用可能なライブラリとして抽出することが可能なため、メンテナンス負荷が軽減されます。
 
・特徴
Dropwizardは、サーブレットコンテナを内蔵しているのでtomcat等のサーバを別で用意しなくても良い点と、アプリケーションをjarファイルとymlファイルを置き換えて起動させるデプロイ方法が大きな特徴です。
 
